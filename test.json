{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "p_import"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "BScript.unit_test",
            "raw": "\"BScript.unit_test\""
          },
          {
            "type": "Literal",
            "value": "unit_test",
            "raw": "\"unit_test\""
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "tester"
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "unit_test"
            },
            "property": {
              "type": "Identifier",
              "name": "test"
            }
          },
          "arguments": []
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "result"
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "fruits"
            },
            "property": {
              "type": "Identifier",
              "name": "toString"
            }
          },
          "arguments": []
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "result"
            },
            "right": {
              "type": "Literal",
              "value": "Banana,Orange,Apple,Mango",
              "raw": "\"Banana,Orange,Apple,Mango\""
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "result"
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "fruits"
            },
            "property": {
              "type": "Identifier",
              "name": "join"
            }
          },
          "arguments": [
            {
              "type": "Literal",
              "value": " * ",
              "raw": "\" * \""
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "result"
            },
            "right": {
              "type": "Literal",
              "value": "Banana * Orange * Apple * Mango",
              "raw": "\"Banana * Orange * Apple * Mango\""
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "result"
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "fruits"
            },
            "property": {
              "type": "Identifier",
              "name": "pop"
            }
          },
          "arguments": []
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "result"
            },
            "right": {
              "type": "Literal",
              "value": "Mango",
              "raw": "\"Mango\""
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "fruits"
              },
              "property": {
                "type": "Identifier",
                "name": "push"
              }
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "Kiwi",
                "raw": "\"Kiwi\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "x"
            },
            "right": {
              "type": "Literal",
              "value": 5.0,
              "raw": "5"
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "fruits"
              },
              "property": {
                "type": "Identifier",
                "name": "shift"
              }
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "x"
            },
            "right": {
              "type": "Literal",
              "value": "Banana",
              "raw": "\"Banana\""
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "fruits"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": "Orange",
                  "raw": "\"Orange\""
                },
                {
                  "type": "Literal",
                  "value": "Apple",
                  "raw": "\"Apple\""
                },
                {
                  "type": "Literal",
                  "value": "Mango",
                  "raw": "\"Mango\""
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "fruits"
              },
              "property": {
                "type": "Identifier",
                "name": "unshift"
              }
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "Lemon",
                "raw": "\"Lemon\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "x"
            },
            "right": {
              "type": "Literal",
              "value": 5.0,
              "raw": "5"
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "fruits"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": "Lemon",
                  "raw": "\"Lemon\""
                },
                {
                  "type": "Literal",
                  "value": "Banana",
                  "raw": "\"Banana\""
                },
                {
                  "type": "Literal",
                  "value": "Orange",
                  "raw": "\"Orange\""
                },
                {
                  "type": "Literal",
                  "value": "Apple",
                  "raw": "\"Apple\""
                },
                {
                  "type": "Literal",
                  "value": "Mango",
                  "raw": "\"Mango\""
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "UnaryExpression",
        "operator": "delete",
        "argument": {
          "type": "MemberExpression",
          "computed": true,
          "object": {
            "type": "Identifier",
            "name": "fruits"
          },
          "property": {
            "type": "Literal",
            "value": 0.0,
            "raw": "0"
          }
        },
        "prefix": true
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "MemberExpression",
              "computed": true,
              "object": {
                "type": "Identifier",
                "name": "fruits"
              },
              "property": {
                "type": "Literal",
                "value": 0.0,
                "raw": "0"
              }
            },
            "right": {
              "type": "Identifier",
              "name": "undefined"
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "removed"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "fruits"
              },
              "property": {
                "type": "Identifier",
                "name": "splice"
              }
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2.0,
                "raw": "2"
              },
              {
                "type": "Literal",
                "value": 2.0,
                "raw": "2"
              },
              {
                "type": "Literal",
                "value": "Lemon",
                "raw": "\"Lemon\""
              },
              {
                "type": "Literal",
                "value": "Kiwi",
                "raw": "\"Kiwi\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "removed"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": "Apple",
                  "raw": "\"Apple\""
                },
                {
                  "type": "Literal",
                  "value": "Mango",
                  "raw": "\"Mango\""
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "fruits"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": "Banana",
                  "raw": "\"Banana\""
                },
                {
                  "type": "Literal",
                  "value": "Orange",
                  "raw": "\"Orange\""
                },
                {
                  "type": "Literal",
                  "value": "Lemon",
                  "raw": "\"Lemon\""
                },
                {
                  "type": "Literal",
                  "value": "Kiwi",
                  "raw": "\"Kiwi\""
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "removed"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "fruits"
              },
              "property": {
                "type": "Identifier",
                "name": "splice"
              }
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2.0,
                "raw": "2"
              },
              {
                "type": "Literal",
                "value": 0.0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "value": "Lemon",
                "raw": "\"Lemon\""
              },
              {
                "type": "Literal",
                "value": "Kiwi",
                "raw": "\"Kiwi\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "removed"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": []
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "fruits"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": "Banana",
                  "raw": "\"Banana\""
                },
                {
                  "type": "Literal",
                  "value": "Orange",
                  "raw": "\"Orange\""
                },
                {
                  "type": "Literal",
                  "value": "Lemon",
                  "raw": "\"Lemon\""
                },
                {
                  "type": "Literal",
                  "value": "Kiwi",
                  "raw": "\"Kiwi\""
                },
                {
                  "type": "Literal",
                  "value": "Apple",
                  "raw": "\"Apple\""
                },
                {
                  "type": "Literal",
                  "value": "Mango",
                  "raw": "\"Mango\""
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myGirls"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Cecilie",
                "raw": "\"Cecilie\""
              },
              {
                "type": "Literal",
                "value": "Lone",
                "raw": "\"Lone\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myBoys"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Emil",
                "raw": "\"Emil\""
              },
              {
                "type": "Literal",
                "value": "Tobias",
                "raw": "\"Tobias\""
              },
              {
                "type": "Literal",
                "value": "Linus",
                "raw": "\"Linus\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myChildren"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "myGirls"
              },
              "property": {
                "type": "Identifier",
                "name": "concat"
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "myBoys"
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "myChildren"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": "Cecilie",
                  "raw": "\"Cecilie\""
                },
                {
                  "type": "Literal",
                  "value": "Lone",
                  "raw": "\"Lone\""
                },
                {
                  "type": "Literal",
                  "value": "Emil",
                  "raw": "\"Emil\""
                },
                {
                  "type": "Literal",
                  "value": "Tobias",
                  "raw": "\"Tobias\""
                },
                {
                  "type": "Literal",
                  "value": "Linus",
                  "raw": "\"Linus\""
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr1"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Cecilie",
                "raw": "\"Cecilie\""
              },
              {
                "type": "Literal",
                "value": "Lone",
                "raw": "\"Lone\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr2"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Emil",
                "raw": "\"Emil\""
              },
              {
                "type": "Literal",
                "value": "Tobias",
                "raw": "\"Tobias\""
              },
              {
                "type": "Literal",
                "value": "Linus",
                "raw": "\"Linus\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr3"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Robin",
                "raw": "\"Robin\""
              },
              {
                "type": "Literal",
                "value": "Morgan",
                "raw": "\"Morgan\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myChildren"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "arr1"
              },
              "property": {
                "type": "Identifier",
                "name": "concat"
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "arr2"
              },
              {
                "type": "Identifier",
                "name": "arr3"
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "myChildren"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": "Cecilie",
                  "raw": "\"Cecilie\""
                },
                {
                  "type": "Literal",
                  "value": "Lone",
                  "raw": "\"Lone\""
                },
                {
                  "type": "Literal",
                  "value": "Emil",
                  "raw": "\"Emil\""
                },
                {
                  "type": "Literal",
                  "value": "Tobias",
                  "raw": "\"Tobias\""
                },
                {
                  "type": "Literal",
                  "value": "Linus",
                  "raw": "\"Linus\""
                },
                {
                  "type": "Literal",
                  "value": "Robin",
                  "raw": "\"Robin\""
                },
                {
                  "type": "Literal",
                  "value": "Morgan",
                  "raw": "\"Morgan\""
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Lemon",
                "raw": "\"Lemon\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "citrus"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "fruits"
              },
              "property": {
                "type": "Identifier",
                "name": "slice"
              }
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1.0,
                "raw": "1"
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "citrus"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": "Orange",
                  "raw": "\"Orange\""
                },
                {
                  "type": "Literal",
                  "value": "Lemon",
                  "raw": "\"Lemon\""
                },
                {
                  "type": "Literal",
                  "value": "Apple",
                  "raw": "\"Apple\""
                },
                {
                  "type": "Literal",
                  "value": "Mango",
                  "raw": "\"Mango\""
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fruits"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Banana",
                "raw": "\"Banana\""
              },
              {
                "type": "Literal",
                "value": "Orange",
                "raw": "\"Orange\""
              },
              {
                "type": "Literal",
                "value": "Apple",
                "raw": "\"Apple\""
              },
              {
                "type": "Literal",
                "value": "Mango",
                "raw": "\"Mango\""
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "fruits"
              },
              "property": {
                "type": "Identifier",
                "name": "toString"
              }
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "result"
            },
            "right": {
              "type": "Literal",
              "value": "Banana,Orange,Apple,Mango",
              "raw": "\"Banana,Orange,Apple,Mango\""
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "cars"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "type"
                    },
                    "computed": false,
                    "value": {
                      "type": "Literal",
                      "value": "Volvo",
                      "raw": "\"Volvo\""
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  },
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "year"
                    },
                    "computed": false,
                    "value": {
                      "type": "Literal",
                      "value": 2016.0,
                      "raw": "2016"
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  }
                ]
              },
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "type"
                    },
                    "computed": false,
                    "value": {
                      "type": "Literal",
                      "value": "Saab",
                      "raw": "\"Saab\""
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  },
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "year"
                    },
                    "computed": false,
                    "value": {
                      "type": "Literal",
                      "value": 2001.0,
                      "raw": "2001"
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  }
                ]
              },
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "type"
                    },
                    "computed": false,
                    "value": {
                      "type": "Literal",
                      "value": "BMW",
                      "raw": "\"BMW\""
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  },
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "year"
                    },
                    "computed": false,
                    "value": {
                      "type": "Literal",
                      "value": 2010.0,
                      "raw": "2010"
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "console"
          },
          "property": {
            "type": "Identifier",
            "name": "log"
          }
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "cars"
          },
          "property": {
            "type": "Identifier",
            "name": "sort"
          }
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "x"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "x"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "year"
                    }
                  }
                }
              ]
            },
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "cars"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "type"
                      },
                      "computed": false,
                      "value": {
                        "type": "Literal",
                        "value": "Saab",
                        "raw": "\"Saab\""
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "year"
                      },
                      "computed": false,
                      "value": {
                        "type": "Literal",
                        "value": 2001.0,
                        "raw": "2001"
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    }
                  ]
                },
                {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "type"
                      },
                      "computed": false,
                      "value": {
                        "type": "Literal",
                        "value": "BMW",
                        "raw": "\"BMW\""
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "year"
                      },
                      "computed": false,
                      "value": {
                        "type": "Literal",
                        "value": 2010.0,
                        "raw": "2010"
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    }
                  ]
                },
                {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "type"
                      },
                      "computed": false,
                      "value": {
                        "type": "Literal",
                        "value": "Volvo",
                        "raw": "\"Volvo\""
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "year"
                      },
                      "computed": false,
                      "value": {
                        "type": "Literal",
                        "value": 2016.0,
                        "raw": "2016"
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": false
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numbers"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 45.0,
                "raw": "45"
              },
              {
                "type": "Literal",
                "value": 4.0,
                "raw": "4"
              },
              {
                "type": "Literal",
                "value": 9.0,
                "raw": "9"
              },
              {
                "type": "Literal",
                "value": 16.0,
                "raw": "16"
              },
              {
                "type": "Literal",
                "value": 25.0,
                "raw": "25"
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "txt"
          },
          "init": {
            "type": "Literal",
            "value": "",
            "raw": "\"\""
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "numbers"
          },
          "property": {
            "type": "Identifier",
            "name": "forEach"
          }
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "myFunction"
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "value"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "name": "txt"
              },
              "right": {
                "type": "BinaryExpression",
                "operator": "+",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "value"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString"
                    }
                  },
                  "arguments": []
                },
                "right": {
                  "type": "Literal",
                  "value": ",",
                  "raw": "\",\""
                }
              }
            }
          }
        ]
      },
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "txt"
            },
            "right": {
              "type": "Literal",
              "value": "45,4,9,16,25,",
              "raw": "\"45,4,9,16,25,\""
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numbers1"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 45.0,
                "raw": "45"
              },
              {
                "type": "Literal",
                "value": 4.0,
                "raw": "4"
              },
              {
                "type": "Literal",
                "value": 9.0,
                "raw": "9"
              },
              {
                "type": "Literal",
                "value": 16.0,
                "raw": "16"
              },
              {
                "type": "Literal",
                "value": 25.0,
                "raw": "25"
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numbers2"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "numbers1"
              },
              "property": {
                "type": "Identifier",
                "name": "map"
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "map_test"
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "map_test"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "value"
        },
        {
          "type": "Identifier",
          "name": "index"
        },
        {
          "type": "Identifier",
          "name": "array"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "BinaryExpression",
              "operator": "*",
              "left": {
                "type": "Identifier",
                "name": "value"
              },
              "right": {
                "type": "Literal",
                "value": 2.0,
                "raw": "2"
              }
            }
          }
        ]
      },
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "numbers2"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": 90.0,
                  "raw": "90"
                },
                {
                  "type": "Literal",
                  "value": 8.0,
                  "raw": "8"
                },
                {
                  "type": "Literal",
                  "value": 18.0,
                  "raw": "18"
                },
                {
                  "type": "Literal",
                  "value": 32.0,
                  "raw": "32"
                },
                {
                  "type": "Literal",
                  "value": 50.0,
                  "raw": "50"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numbers"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 45.0,
                "raw": "45"
              },
              {
                "type": "Literal",
                "value": 4.0,
                "raw": "4"
              },
              {
                "type": "Literal",
                "value": 9.0,
                "raw": "9"
              },
              {
                "type": "Literal",
                "value": 16.0,
                "raw": "16"
              },
              {
                "type": "Literal",
                "value": 25.0,
                "raw": "25"
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "over18"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "numbers"
              },
              "property": {
                "type": "Identifier",
                "name": "filter"
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "filterer"
              }
            ]
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "filterer"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "value"
        },
        {
          "type": "Identifier",
          "name": "index"
        },
        {
          "type": "Identifier",
          "name": "array"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "BinaryExpression",
              "operator": ">",
              "left": {
                "type": "Identifier",
                "name": "value"
              },
              "right": {
                "type": "Literal",
                "value": 18.0,
                "raw": "18"
              }
            }
          }
        ]
      },
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "assertion"
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "over18"
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": 45.0,
                  "raw": "45"
                },
                {
                  "type": "Literal",
                  "value": 25.0,
                  "raw": "25"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "tester"
          },
          "property": {
            "type": "Identifier",
            "name": "finalize"
          }
        },
        "arguments": []
      }
    },
    {
      "type": "EmptyStatement"
    }
  ]
}